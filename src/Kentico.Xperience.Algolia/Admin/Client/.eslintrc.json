{
	"env": {
		"browser": true,
		"es2021": true
	},
	"extends": [
		"plugin:react/recommended",
		"standard-with-typescript",
		"prettier"
	],
	"overrides": [],
	"parserOptions": {
		"project": "./tsconfig.json",
		"ecmaVersion": "latest",
		"sourceType": "module",
		"parser": "babel-eslint"
	},
	"plugins": [ "react" ],
	"rules": {
		"@typescript-eslint/no-invalid-void-type": [ "off" ],
		"quotes": [
			"warn",
			"single",
			{
				"avoidEscape": true
			}
		],
		"jsx-quotes": [ "warn", "prefer-double" ],
		"eqeqeq": [ "warn", "always" ],
		"no-var": "warn",
		"no-unused-vars": "off",
		"no-console": "warn",
		"no-debugger": "warn",
		"@typescript-eslint/no-unused-vars": [
			"warn",
			{
				"args": "after-used",
				"argsIgnorePattern": "^_",
				"varsIgnorePattern": "^_",
				"caughtErrorsIgnorePattern": "^_"
			}
		],
		"import/first": "warn",
		"sort-imports": [
			"warn",
			{ "ignoreDeclarationSort": true }
		],
		"import/order": [
			"warn",
			{
				"newlines-between": "never",
				"pathGroups": [
					{
						"pattern": "./**.scss",
						"group": "index",
						"position": "after"
					}
				],
				"groups": [
					"builtin",
					"external",
					"internal",
					"parent",
					"sibling",
					"index"
				],
				"alphabetize": {
					"order": "asc",
					"caseInsensitive": true
				}
			}
		],
		"import/no-default-export": "warn",
		"import/no-duplicates": "warn",
		"react/prefer-es6-class": [ "warn", "always" ],
		"react/jsx-uses-react": "off",
		"react/react-in-jsx-scope": "off",
		"@typescript-eslint/no-explicit-any": "warn",
		"@typescript-eslint/no-require-imports": "warn",
		"@typescript-eslint/naming-convention": [
			"warn",
			{
				"selector": "default",
				"format": [ "PascalCase" ],
				"filter": {
					"regex": "^((data|aria|xp|invalid|--[a-z]+)[-].+)|[0-9]+$",
					"match": false
				}
			},
			{
				"selector": "variable",
				"format": [ "PascalCase", "camelCase" ]
			},
			{
				"selector": "variable",
				"format": [ "UPPER_CASE" ],
				"filter": {
					"regex": "^__[A-Za-z_]+__$",
					"match": true
				},
				"leadingUnderscore": "requireDouble",
				"trailingUnderscore": "requireDouble"
			},
			{
				"selector": "function",
				"format": [ "camelCase" ]
			},
			{
				"selector": "parameter",
				"format": [ "camelCase" ],
				"leadingUnderscore": "allow"
			},
			{
				"selector": "enum",
				"format": [ "PascalCase" ]
			},
			{
				"selector": "objectLiteralProperty",
				"format": [ "camelCase", "PascalCase" ],
				"filter": {
					"regex": "^((data|aria|xp|invalid|--[a-z]+)[-].+)|[0-9]+$",
					"match": false
				}
			},
			{
				"selector": "objectLiteralMethod",
				"format": [ "camelCase" ]
			},
			{
				"selector": "typeProperty",
				"format": [ "camelCase" ],
				"filter": {
					"regex": "^(data)[-].+$",
					"match": false
				}
			},
			{
				"selector": "typeLike",
				"format": [ "PascalCase" ]
			},
			{
				"selector": "classMethod",
				"format": [ "camelCase" ]
			},
			{
				"selector": "classProperty",
				"format": [ "camelCase" ]
			},
			{
				"selector": "interface",
				"format": [ "PascalCase" ],
				"custom": {
					"regex": "^I[A-Z]",
					"match": false
				}
			}
		],
		"@typescript-eslint/await-thenable": "warn",
		"@typescript-eslint/prefer-enum-initializers": "warn",
		"@typescript-eslint/no-non-null-assertion": "warn"
	},
	"settings": {
		"react": {
			"version": "18.2.0"
		}
	}
}
