name: "$(Build.DefinitionName) #$(Build.BuildId)"

trigger: none # Manual Publish
pr: none # GitHub Actions handle PRs

parameters:
  - name: AgentPoolName
    displayName: Agent pool name
    type: string
    default: Default

  - name: AgentName
    displayName: Agent name - single char for any
    type: string
    default: " "

variables:
  - name: SIGN_FILE
    value: true

stages:
  - stage: Build
    jobs:
      - job: Build
        displayName: Build, Sign, Test & Pack

        pool:
          name: ${{ parameters.AgentPoolName }}
          ${{ if ne(length(parameters.AgentName), 1) }}:
            demands:
              - Agent.Name -equals ${{ parameters.AgentName }}

        variables:
          - group: 14.0 Authenticode signature parameters

          - name: Configuration
            value: Release

          - name: ProjectPath
            value: src/Kentico.Xperience.Algolia/Kentico.Xperience.Algolia.csproj

        steps:
          - task: UseDotNet@2
            displayName: Select dotnet version
            inputs:
              packageType: sdk
              useGlobalJson: true

          - task: DotNetCoreCLI@2
            displayName: Restore dependencies
            inputs:
              command: restore
              projects: ${{ variables.ProjectPath }}
              feedsToUse: select
              restoreArguments: --locked-mode

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              command: build
              projects: ${{ variables.ProjectPath }}
              configuration: ${{ variables.Configuration }}
              arguments: --no-restore

          - task: DotNetCoreCLI@2
            displayName: Create NuGet package
            inputs:
              command: pack
              packagesToPack: ${{ variables.ProjectPath }}
              configuration: ${{ variables.Configuration }}
              packDirectory: $(System.DefaultWorkingDirectory)/packages
              includesymbols: true
              nobuild: true
              versioningScheme: off

          - publish: $(System.DefaultWorkingDirectory)/packages
            displayName: Publish NuGet package as artifact
            artifact: artifact

  - ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/main') }}:
      - stage: PublishNuGetPackages
        displayName: Publish NuGet packages
        dependsOn: Build

        jobs:
          - deployment: PublishNuGetPackages
            displayName: Publish NuGet packages

            pool:
              name: ${{ parameters.AgentPoolName }}
              ${{ if ne(length(parameters.AgentName), 1) }}:
                demands:
                  - Agent.Name -equals ${{ parameters.AgentName }}

            environment: integrations-release-nuget
            workspace:
              clean: all
            strategy:
              runOnce:
                deploy:
                  steps:
                    - checkout: none

                    - task: NuGetToolInstaller@1
                      displayName: Install latest nuget.exe
                      inputs:
                        versionSpec: ">=5.6"
                        checkLatest: true

                    - task: NuGetAuthenticate@1
                      displayName: NuGet Authenticate

                    - task: NuGetCommand@2
                      displayName: NuGet push
                      inputs:
                        command: push
                        packagesToPush: $(Pipeline.Workspace)/artifact/*.nupkg
                        nuGetFeedType: external
                        publishFeedCredentials: nuget.org
                        allowPackageConflicts: true
